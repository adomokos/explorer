---
steps:
  - simple_align:
      cases: false
      top_level_patterns: false
      records: false
  - imports:
      align: none
      list_align: after_alias
      pad_module_names: false
      long_list_align: new_line_multiline
      empty_list_align: right_after
      list_padding: 2
      separate_lists: false
      space_surround: false
  - language_pragmas:
      style: vertical
      align: false
      remove_redundant: false
  - trailing_whitespace: {}
columns: 80
newline: native
language_extensions:
  - AutoDeriveTypeable
  - BangPatterns
  - BinaryLiterals
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MonadFailDesugaring
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TupleSections
  - TypeFamilies
  - TypeSynonymInstances
  - ViewPatterns
